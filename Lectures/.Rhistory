##------ Thu Mar 11 09:21:49 2021 ------##
install.packages("ggthemes")
rnum <- lapply(2:100, rnorm)
res  <- sapply(rnum, function(x) c(mean(x), median(x), IQR(x), sd(x)))
res
plot(2:100, res[1,])
iris <- read_tsv("../Datasets/iris.tsv")
library(tidyverse)
iris <- read_tsv("../Datasets/iris.tsv")
iris
sapply(iris, mean)
iris <- read_csv("../Datasets/iris.csv")
iris
rm(print.tbl)
iris
nveh <- sapply(starwars$starships, length)
sel <- nveh > 0
starships <- starwars$starships[sel]
names(starships) <- starwars$names[sel]
names(starships) <- starwars$name[sel]
starships
starwars %>% group_by(eye_color) %>%
  summarise(height=mean(height))
starwars %>% group_by(eye_color) %>%
  summarise(height=mean(height)) %>%
  drop_na
iris <- read.csv("../Datasets/iris.csv")
iris
as_tibble(iris)
as.numeric(iris$Sepal.Width)
iris$Sepal.Width[42]
iris <- read_csv("../Datasets/iris.csv")
iris$`Sepal Width`[42]
iris[42,]
colnames(iris) <- gsub("[^[:alpha:]]", "_", colnames(iris))
iris
mdb <- read_xlsx("../Datasets/meta_data_botched.xlsx")
library(readxl)
mdb <- read_xlsx("../Datasets/meta_data_botched.xlsx")
mdb
mdb$AGE
mdb
lapply(mdb, unique)
mdb <- mdb %>%
  mutate(AGE=gsub("2 9", "29", AGE)) %>%
  mutate(AGE=as.numeric(gsub(" .*", "", AGE))) %>%
  mutate(SEX=toupper(SEX)) %>%
  mutate(SEX=gsub("^(.).*", "\\1", SEX)) %>% # one letter code
  mutate(SEX=gsub("W", "F", SEX))
mdb
lapply(mdb, unique)
mdb <- mdb %>%
  mutate(AGE=gsub("2 9", "29", AGE)) %>%
  mutate(AGE=as.numeric(gsub(" .*", "", AGE))) %>%
  mutate(SEX=toupper(SEX)) %>%
  mutate(SEX=gsub("^(.).*", "\\1", SEX)) %>% # one letter code
  mutate(SEX=gsub("W", "F", SEX)) %>%
  mutate(ARM=toupper(gsub("^(.).*", "\\1", ARM))) %>% # one letter code, uppercase
  mutate(ARM=gsub("C", "P", ARM)) 
lapply(mdb, unique)
mdb <- mdb %>%
  mutate(AGE=gsub("2 9", "29", AGE)) %>%
  mutate(AGE=as.numeric(gsub(" .*", "", AGE))) %>%
  mutate(SEX=toupper(SEX)) %>%
  mutate(SEX=gsub("^(.).*", "\\1", SEX)) %>% # one letter code
  mutate(SEX=gsub("W", "F", SEX)) %>%
  mutate(ARM=toupper(gsub("^(.).*", "\\1", ARM))) %>% # one letter code, uppercase
  mutate(ARM=gsub("C", "P", ARM)) %>%
  mutate(PLACEBO=gsub("^(n|N|0).*", "N", PLACEBO)) %>%
  mutate(PLACEBO=gsub("^(y|Y|1).*", "N", PLACEBO))
mdb
lapply(mdb, unique)
mdb <- mdb %>%
  mutate(AGE=gsub("2 9", "29", AGE)) %>%
  mutate(AGE=as.numeric(gsub(" .*", "", AGE))) %>%
  mutate(SEX=toupper(SEX)) %>%
  mutate(SEX=gsub("^(.).*", "\\1", SEX)) %>% # one letter code
  mutate(SEX=gsub("W", "F", SEX)) %>%
  mutate(ARM=toupper(gsub("^(.).*", "\\1", ARM))) %>% # one letter code, uppercase
  mutate(ARM=gsub("C", "P", ARM)) 
lapply(mdb, unique)
mdb <- read_xlsx("../Datasets/meta_data_botched.xlsx")
mdb <- mdb %>%
  mutate(AGE=gsub("2 9", "29", AGE)) %>%
  mutate(AGE=as.numeric(gsub(" .*", "", AGE))) %>%
  mutate(SEX=toupper(SEX)) %>%
  mutate(SEX=gsub("^(.).*", "\\1", SEX)) %>% # one letter code
  mutate(SEX=gsub("W", "F", SEX)) %>%
  mutate(ARM=toupper(gsub("^(.).*", "\\1", ARM))) %>% # one letter code, uppercase
  mutate(ARM=gsub("C", "P", ARM)) %>%
  mutate(PLACEBO=gsub("^(n|N|0).*", "N", PLACEBO)) %>%
  mutate(PLACEBO=gsub("^(y|Y|1).*", "Y", PLACEBO)) 
mdb
lapply(mdb, unique)
mdb <- mdb %>%
  mutate(AGE=gsub("2 9", "29", AGE)) %>%
  mutate(AGE=as.numeric(gsub(" .*", "", AGE))) %>%
  mutate(SEX=toupper(SEX)) %>%
  mutate(SEX=gsub("^(.).*", "\\1", SEX)) %>% # one letter code
  mutate(SEX=gsub("W", "F", SEX)) %>%
  mutate(ARM=toupper(gsub("^(.).*", "\\1", ARM))) %>% # one letter code, uppercase
  mutate(ARM=gsub("C", "P", ARM)) %>%
  mutate(PLACEBO=gsub("^(N|0).*", "N", PLACEBO), ignore.case=TRUE) %>%
  mutate(PLACEBO=gsub("^(Y|1).*", "Y", PLACEBO), ignore.case=TRUE) %>%
  mutate(ip=gsub("^(not available|NA|n.a.|-)", NA, ip)) %>%
  mutate(ip=gsub("1", "yes", ip)) %>%
  mutate(ip=gsub("0", "no", ip))
mdb
lapply(mdb, unique)
mdb <- read_xlsx("../Datasets/meta_data_botched.xlsx")
mdb <- mdb %>%
  mutate(AGE=gsub("2 9", "29", AGE)) %>%
  mutate(AGE=as.numeric(gsub(" .*", "", AGE))) %>%
  mutate(SEX=toupper(SEX)) %>%
  mutate(SEX=gsub("^(.).*", "\\1", SEX)) %>% # one letter code
  mutate(SEX=gsub("W", "F", SEX)) %>%
  mutate(ARM=toupper(gsub("^(.).*", "\\1", ARM))) %>% # one letter code, uppercase
  mutate(ARM=gsub("C", "P", ARM)) %>%
  mutate(PLACEBO=gsub("^(N|0).*", "N", PLACEBO), ignore.case=TRUE) %>%
  mutate(PLACEBO=gsub("^(Y|1).*", "Y", PLACEBO), ignore.case=TRUE) %>%
  mutate(ip=gsub("^(not available|NA|n.a.|–)", NA, ip, ignore.case=TRUE)) %>%
  mutate(ip=gsub("1", "yes", ip)) %>%
  mutate(ip=gsub("0", "no", ip))
lapply(mdb, unique)
mdb <- mdb %>%
  mutate(AGE=gsub("2 9", "29", AGE)) %>%
  mutate(AGE=as.numeric(gsub(" .*", "", AGE))) %>%
  mutate(SEX=toupper(SEX)) %>%
  mutate(SEX=gsub("^(.).*", "\\1", SEX)) %>% # one letter code
  mutate(SEX=gsub("W", "F", SEX)) %>%
  mutate(ARM=toupper(gsub("^(.).*", "\\1", ARM))) %>% # one letter code, uppercase
  mutate(ARM=gsub("C", "P", ARM)) %>%
  mutate(PLACEBO=gsub("^(N|0).*", "N", PLACEBO), ignore.case=TRUE) %>%
  mutate(PLACEBO=gsub("^(Y|1).*", "Y", PLACEBO), ignore.case=TRUE) %>%
  mutate(ip=gsub("^(not available|NA|n.a.|–)", NA, ip, ignore.case=TRUE)) %>%
  mutate(ip=gsub("1", "yes", ip)) %>%
  mutate(ip=gsub("0", "no", ip)) %>%
  mutate(Timepoint=gsub("D[a-z ]*", "D", Timepoint)) 
mdb
lapply(mdb, unique)
mdb <- mdb %>%
  mutate(AGE=gsub("2 9", "29", AGE)) %>%
  mutate(AGE=as.numeric(gsub(" .*", "", AGE))) %>%
  mutate(SEX=toupper(SEX)) %>%
  mutate(SEX=gsub("^(.).*", "\\1", SEX)) %>% # one letter code
  mutate(SEX=gsub("W", "F", SEX)) %>%
  mutate(ARM=toupper(gsub("^(.).*", "\\1", ARM))) %>% # one letter code, uppercase
  mutate(ARM=gsub("C", "P", ARM)) %>%
  mutate(PLACEBO=gsub("^(N|0).*", "N", PLACEBO), ignore.case=TRUE) %>%
  mutate(PLACEBO=gsub("^(Y|1).*", "Y", PLACEBO), ignore.case=TRUE) %>%
  mutate(ip=gsub("^(not available|NA|n.a.|–)", NA, ip, ignore.case=TRUE)) %>%
  mutate(ip=gsub("1", "yes", ip)) %>%
  mutate(ip=gsub("0", "no", ip)) %>%
  mutate(Timepoint=gsub("D[a-z ]*", "D", Timepoint)) %>%
  mutate(SUBJ=gsub("[^0-9]*", "", SUBJ))
lapply(mdb, unique)
install.packages("gapminder")
library(gapminder)
gapminder
gapminder_unfiltered
gapminder %>% filter(year==1952)
summary(gapminder$year)
gapminder %>% group_by(year) %>% summarise(n=n())
gapminder %>% group_by(year) %>% summarise(n=n()) %>% arrange(-n)
gapminder %>% group_by(year) %>% summarise(n=n()) %>% arrange(n)
gapminder
g1952 <- gapminder %>%
  filter(year == 1952) %>%
  ggplot2(aes(x=gdpPercap, y=lifeExp, color=continent)) +
  geom_point()
library(ggplot2)
g1952 <- gapminder %>%
  filter(year == 1952) %>%
  ggplot2(aes(x=gdpPercap, y=lifeExp, color=continent)) +
  geom_point()
g1952 <- gapminder %>%
  filter(year == 1952) %>%
  ggplot(aes(x=gdpPercap, y=lifeExp, color=continent)) +
  geom_point()
g1952
gapminder %>% filter(year == 1952 & gdpPercap > 9e4)
?xlim
g1952 + xlim(range(gapminder$gdpPercap))
g1952 + xlim(range(gapminder$gdpPercap)) + scale_x_log10
g1952 + xlim(range(gapminder$gdpPercap)) + scale_x_log10()
range(gapminder$gdpPercap)
g <- list()
g["1952"] <- gapminder %>% filter(year == 1952)
g["2007"] <- gapminder %>% filter(year == 2007) 
g <- map(g, ~ . %>%
  ggplot(aes(x=gdpPercap, y=lifeExp, color=continent)) +
  geom_point() + scale_x_log10() +
  xlim(range(gapminder$gdpPercap))
  ylim(range(gapminder$lifeExp))
g <- list()
g["1952"] <- gapminder %>% filter(year == 1952)
g["2007"] <- gapminder %>% filter(year == 2007) 
g <- map(g, ~ . %>%
  ggplot(aes(x=gdpPercap, y=lifeExp, color=continent)) +
  geom_point() + scale_x_log10() +
  xlim(range(gapminder$gdpPercap)) +
  ylim(range(gapminder$lifeExp)))
g
g[[1]]
g <- list()
g[["1952"]] <- gapminder %>% filter(year == 1952)
g[["2007"]] <- gapminder %>% filter(year == 2007)
g <- map(g, ~ . %>%
  ggplot(aes(x=gdpPercap, y=lifeExp, color=continent)) +
  geom_point() + scale_x_log10() +
  xlim(range(gapminder$gdpPercap)) +
  ylim(range(gapminder$lifeExp)))
g
g[[1]]
g[["2007"]] <- gapminder %>% filter(year == 2007)
g
g[["1952"]] <- gapminder %>% filter(year == 1952)
g
g[[1]] %>% gplot(aes(x=gdpPercap, y=lifeExp, color=continent)) +
  geom_point() + scale_x_log10() +
  xlim(range(gapminder$gdpPercap)) +
  ylim(range(gapminder$lifeExp))
g[[1]] %>%
  ggplot(aes(x=gdpPercap, y=lifeExp, color=continent)) +
  geom_point() + scale_x_log10() +
  xlim(range(gapminder$gdpPercap)) +
  ylim(range(gapminder$lifeExp))
g1952 <- gapminder %>% filter(year == 1952) %>%
  ggplot(aes(x=gdpPercap, y=lifeExp, color=continent)) +
  geom_point() + scale_x_log10() +
  xlim(range(gapminder$gdpPercap)) +
  ylim(range(gapminder$lifeExp))
g2007 <- gapminder %>% filter(year == 2007) %>%
  ggplot(aes(x=gdpPercap, y=lifeExp, color=continent)) +
  geom_point() + scale_x_log10() +
  xlim(range(gapminder$gdpPercap)) +
  ylim(range(gapminder$lifeExp))
library(cowplot)
plot_grid(g1952, g2007)
g1952 <- gapminder %>% filter(year == 1952) %>%
  ggplot(aes(x=gdpPercap, y=lifeExp, color=continent)) +
  geom_point() +
  xlim(range(gapminder$gdpPercap)) +
  ylim(range(gapminder$lifeExp)) + scale_x_log10()
g2007 <- gapminder %>% filter(year == 2007) %>%
  ggplot(aes(x=gdpPercap, y=lifeExp, color=continent)) +
  geom_point() +
  xlim(range(gapminder$gdpPercap)) +
  ylim(range(gapminder$lifeExp)) + scale_x_log10()
plot_grid(g1952, g2007)
g1952 <- gapminder %>% filter(year == 1952) %>%
  ggplot(aes(x=gdpPercap, y=lifeExp, color=continent)) +
  geom_point() +
  xlim(range(gapminder$gdpPercap)) +
  ylim(range(gapminder$lifeExp)) + scale_x_log10()
  
g2007 <- gapminder %>% filter(year == 2007) %>%
  ggplot(aes(x=gdpPercap, y=lifeExp, color=continent)) +
  geom_point() +
  xlim(range(gapminder$gdpPercap)) +
  ylim(range(gapminder$lifeExp)) + scale_x_log10()
```
plot_grid(g1952, g2007)
theme_set(theme_bw())
plot_grid(g1952, g2007)
g <- gapminder %>% filter(year %in% c(1952, 2007)) %>%
  ggplot(aes(x=gdpPercap, y=lifeExp, color=continent)) +
  geom_point() +
  facet_grid(. ~ year)
g
g <- gapminder %>% filter(year %in% c(1952, 2007)) %>%
  ggplot(aes(x=gdpPercap, y=lifeExp, color=continent)) +
  geom_point() +
  scale_x_log10() +
  facet_grid(. ~ year)
g <- gapminder %>% filter(year %in% c(1952, 2007)) %>%
  ggplot(aes(x=gdpPercap, y=lifeExp, color=continent)) +
  geom_point() +
  facet_grid(. ~ year) +
  scale_x_log10() 
g <- gapminder %>% filter(year %in% c(1952, 2007)) %>% ggplot(aes(x=gdpPercap, y=lifeExp, color=continent)) + geom_point() + facet_grid(. ~ year) + scale_x_log10()
gapminder %>% filter(year %in% c(1952, 2007)) %>% ggplot(aes(x=gdpPercap, y=lifeExp, color=continent)) + geom_point() + facet_grid(. ~ year) + scale_x_log10()
g
gapminder %>%
  ggplot(aes(x=gdpPercap, y=lifeExp, color=year))
gapminder %>%  ggplot(aes(x=gdpPercap, y=lifeExp, color=year)) + geom_point()
install.packages(gganimate)
install.packages("gganimate")
library(gganimate)
install.packages("gifski")
install.packages("av")
install.packages("av")
install.packages("gifski")
install.packages("av")
gapminder %>%
  ggplot(aes(x=gdpPercap, y=lifeExp, size=pop, color=continent)) +
  geom_point() + scale_x_log10() +
  transition_states(year, transition_length=.1, state_length=.1)
g <- gapminder %>% ggplot(aes(x=gdpPercap, y=lifeExp, size=pop, color=continent)) + geom_point() + scale_x_log10() + transition_states(year, transition_length=.1, state_length=.1)
g
library(gapminder)
library(ggplot2)
library(gganimate)
data(gapminder)
p <- ggplot(
gapminder,
aes(x = gdpPercap, y=lifeExp, size = pop, colour = country)
) +
geom_point(show.legend = FALSE, alpha = 0.7) +
scale_color_viridis_d() +
scale_size(range = c(2, 12)) +
scale_x_log10() +
labs(x = "GDP per capita", y = "Life expectancy")
p + transition_time(year)
file_renderer(dir = ".", prefix = "gganim_plot", overwrite = FALSE)
debugonce(file_renderer)
p + transition_time(year)
traceback()
 
p + transition_time(year)
p
p <- ggplot(iris, aes(x = Petal.Width, y = Petal.Length)) +
  geom_point()
plot(p)
data(iris)
p
p <- ggplot(iris, aes(x = Petal.Width, y = Petal.Length)) +geom_point()
p
anim <- p +
  transition_states(Species,
                    transition_length = 2,
                    state_length = 1)
anim
anim <- p + transition_states(Species)
anim
anim
anim_save("test.gif", anim)
?anim_save
animate(anim, renderer="gifski")
myPlot <- ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, colour = country)) +
  geom_point(alpha = 0.7, show.legend = FALSE) +
  scale_colour_manual(values = country_colors) +
  scale_size(range = c(2, 12)) +
  scale_x_log10() +
  # Here comes the gganimate specific bits
  labs(title = 'Year: {frame_time}', x = 'GDP per capita', y = 'life expectancy') +
  transition_time(year) +
  ease_aes('linear')
animate(myPlot, duration = 5, fps = 20, width = 200, height = 200, renderer = gifski_renderer())
anim_save("output.gif")
g <- gapminder %>% ggplot(aes(x=gdpPercap, y=lifeExp, size=pop, color=continent)) + geom_point() + scale_x_log10() +
  transition_time(year) +
  labs(title = 'Year: {frame_time}', x = 'GDP per capita', y = 'life expectancy') +
  ease_aes("linear")
animate(g, duration = 5, fps = 20, width = 200, height = 200, renderer = gifski_renderer())
anim_save("output.gif")
animate(g, duration = 5, fps = 20, width = 600, height = 400, renderer = gifski_renderer())
install.packages("av")
animate(g, duration = 5, fps = 20, width = 600, height = 400, renderer = av_renderer())
anim_save("output.gif")
animate(g, duration = 5, fps = 20, width = 600, height = 400, renderer = gifski_renderer())
anim_save("output.gif")
animate(g, duration = 5, fps = 20, width = 600, height = 400, renderer = av_renderer())
country_colors
 library(gganimate)
g <- gapminder %>% ggplot(aes(x=gdpPercap, y=lifeExp, size=pop, color=country)) + geom_point() + scale_x_log10() +
  scale_color_manual(country_colors) +
  transition_time(year) +
  labs(title = 'Year: {frame_time}', x = 'GDP per capita', y = 'life expectancy') +
  ease_aes("linear")
animate(g, duration = 5, fps = 20, width = 800, height = 500, renderer = av_renderer())
anim_save("gapminder.mp4")
country_colors
 library(gganimate)
g <- gapminder %>% ggplot(aes(x=gdpPercap, y=lifeExp, size=pop, color=country)) + geom_point() + scale_x_log10() +
  scale_color_manual(values=country_colors) +
  transition_time(year) +
  labs(title = 'Year: {frame_time}', x = 'GDP per capita', y = 'life expectancy') +
  ease_aes("linear")
animate(g, duration = 5, fps = 20, width = 800, height = 500, renderer = av_renderer())
anim_save("gapminder.mp4")
library(gganimate)
g <- gapminder %>% ggplot(aes(x=gdpPercap, y=lifeExp, size=pop, color=country)) + 
  geom_point(show.legend=FALSE) +
  scale_x_log10() +
  scale_color_manual(values=country_colors) +   scale_size(range = c(2, 12)) +
  transition_time(year) +
  labs(title = 'Year: {frame_time}', x = 'GDP per capita', y = 'life expectancy') +
  ease_aes("linear")
  
animate(g, duration = 5, fps = 20, width = 800, height = 500, renderer = av_renderer())
anim_save("gapminder.mp4")
library(RColorBrewer)
display.brewer.all()
library(gganimate)
g <- gapminder %>% ggplot(aes(x=gdpPercap, y=lifeExp, size=pop, color=continent)) +
  geom_point(alpha=.8) + 
  scale_color_brewer(palette="Dark2") +
  scale_x_log10() + 
  scale_size(range = c(2, 12)) +
  transition_time(year) + 
  labs(title = 'Year: {frame_time}', x = 'GDP per capita', y = 'life expectancy') +
  ease_aes("linear")
animate(g, duration = 5, fps = 20, width = 800, height = 500, renderer = av_renderer())
anim_save("gapminder.mp4")
library(gganimate)
g <- gapminder %>% ggplot(aes(x=gdpPercap, y=lifeExp, size=pop, color=continent)) +
  geom_point(alpha=.8) + 
  scale_color_brewer(palette="Dark2") +
  scale_x_log10() + 
  scale_size(range = c(2, 12)) +
  transition_time(year) + 
  labs(title = 'Year: {frame_time}', x = 'GDP per capita', y = 'life expectancy') +
  ease_aes("linear")
animate(g, duration = 15, fps = 20, width = 800, height = 500, renderer = av_renderer())
anim_save("gapminder.mp4")
library(ggcorrplot)
install.packages("ggcorrplot")
# Correlation matrix
data(mtcars)
corr <- round(cor(mtcars), 1)
# Plot
ggcorrplot(corr, hc.order = TRUE, type = "lower", lab = TRUE, lab_size = 3, method="circle", colors = c("tomato2", "white", "springgreen3"), title="Correlogram of mtcars", ggtheme=theme_bw)
library(ggcorrplot)
# Correlation matrix
data(mtcars)
corr <- round(cor(mtcars), 1)
# Plot
ggcorrplot(corr, hc.order = TRUE, type = "lower", lab = TRUE, lab_size = 3, method="circle", colors = c("tomato2", "white", "springgreen3"), title="Correlogram of mtcars", ggtheme=theme_bw)
p <- ggcorrplot(corr, hc.order = TRUE, type = "lower", lab = TRUE, lab_size = 3, method="circle", colors = c("tomato2", "white", "springgreen3"), title="Correlogram of mtcars")
p + theme(theme_cowplot())
?theme
?theme
gapminder %>% filter(year %in% c(1952, 2007)) %>% ggplot(aes(x=year, y=gdpPercap)) + geom_point()
gapminder %>% filter(year %in% c(1952, 2007)) %>% ggplot(aes(x=year, y=gdpPercap, country)) + geom_point()
gapminder %>% filter(year %in% c(1952, 2007)) %>% ggplot(aes(x=year, y=gdpPercap, color=country)) + geom_point()
gapminder %>% filter(year %in% c(1952, 2007)) %>% ggplot(aes(x=year, y=gdpPercap, color=country)) + geom_point(show.legend=F)
gapminder %>% filter(year %in% c(1952, 2007)) %>% ggplot(aes(x=year, y=gdpPercap, color=country)) + geom_point(show.legend=F) + scale_color_manual(values=country_colors)
gapminder %>% filter(year %in% c(1952, 2007)) %>% ggplot(aes(x=year, y=gdpPercap, color=country)) + geom_point(show.legend=F) + scale_color_manual(values=country_colors) + geom_lines()
gapminder %>% filter(year %in% c(1952, 2007)) %>% ggplot(aes(x=year, y=gdpPercap, color=country)) + geom_point(show.legend=F) + scale_color_manual(values=country_colors) + geom_line()
gapminder %>% filter(year %in% c(1952, 2007)) %>% ggplot(aes(x=year, y=gdpPercap, color=country)) + geom_point(show.legend=F) + scale_color_manual(values=country_colors) + geom_line(show.legend=F)
gapminder %>% filter(year %in% c(1952, 2007)) %>% ggplot(aes(x=year, y=gdpPercap, color=country)) + geom_point(show.legend=F) + scale_color_manual(values=country_colors) + geom_line(show.legend=F) + scale_y_log10()
tmp <- gapminder %>% filter(year %in% c(1952, 2007)) %>% group_by(continent) %>% summary(mean=mean(gdpPercap), median=median(gdpPercap))
tmp
tmp <- gapminder %>% filter(year %in% c(1952, 2007)) %>% group_by(continent) %>% summarise(mean=mean(gdpPercap), median=median(gdpPercap))
tmp
tmp <- gapminder %>% filter(year %in% c(1952, 2007)) %>% group_by(continent, year) %>% summarise(mean=mean(gdpPercap), median=median(gdpPercap))
tmp
tmp %>% ggplot(aes(x=year, y=mean)) + geom_point() + geom_line()
tmp %>% ggplot(aes(x=year, y=mean, color=continent)) + geom_point() + geom_line()
tmp %>% ggplot(aes(x=year, y=mean, color=continent)) + geom_point() + geom_line() + scale_y_log10()
tmp %>% ggplot(aes(x=year, y=mean, color=continent)) + geom_point() + geom_line() + scale_y_log2()
tmp %>% ggplot(aes(x=year, y=mean, color=continent)) + geom_point() + geom_line() + scale_y_log10()
tmp %>% ggplot(aes(x=year, y=mean, color=continent)) + geom_point() + geom_line() + scale_y_log10() + geom_text(label=continent)
tmp %>% ggplot(aes(x=year, y=mean, color=continent)) + geom_point() + geom_line() + scale_y_log10() + geom_text(aes(label=continent))
tmp %>% ggplot(aes(x=year, y=mean, color=continent)) + geom_point() + geom_line() + scale_y_log10() + geom_text(aes(label=continent, hsize=1))
tmp %>% ggplot(aes(x=year, y=mean, color=continent)) + geom_point() + geom_line() + scale_y_log10() + geom_text(aes(label=continent, hjust=1))
tmp %>% ggplot(aes(x=year, y=mean, color=continent)) + geom_point() + geom_line() + scale_y_log10() + geom_text(aes(label=continent, hjust=ifelse(year==1952, 1, -1)))
tmp %>% ggplot(aes(x=year, y=mean, color=continent)) + geom_point() + geom_line() + scale_y_log10() + geom_text(aes(label=continent, hjust=ifelse(year==1952, 1.5, -1)))
tmp %>% ggplot(aes(x=year, y=mean, color=continent)) + geom_point() + geom_line() + scale_y_log10() + geom_text(aes(label=continent, hjust=ifelse(year==1952, 1.5, -1))) + xlim(1945, 2020)
tmp %>% ggplot(aes(x=year, y=mean, color=continent)) + geom_point() + geom_line() + scale_y_log10() + geom_text(aes(label=continent, hjust=ifelse(year==1952, 1.5, -1)), show.legend=F) + xlim(1945, 2020)
?geom_text
tmp %>% ggplot(aes(x=year, y=mean, color=continent)) + geom_point() + geom_line() + scale_y_log10() + geom_text(aes(label=continent, hjust=ifelse(year==1952, "right", "left")), show.legend=F) + xlim(1945, 2020)
tmp %>% ggplot(aes(x=year, y=mean, color=continent)) + geom_point() + geom_line() + scale_y_log10() + geom_text(aes(label=continent, hjust=ifelse(year==1952, -.1, .1)), show.legend=F) + xlim(1945, 2020)
tmp %>% ggplot(aes(x=year, y=mean, color=continent)) + geom_point() + geom_line() + scale_y_log10() + geom_text(aes(label=continent, hjust=ifelse(year==1952, -.1, -.1)), show.legend=F) + xlim(1945, 2020)
tmp %>% ggplot(aes(x=year, y=mean, color=continent)) + geom_point() + geom_line() + scale_y_log10() + geom_text(aes(label=continent, hjust=ifelse(year==1952, .1, -.1)), show.legend=F) + xlim(1945, 2020)
tmp %>% ggplot(aes(x=year, y=mean, color=continent)) + geom_point() + geom_line() + scale_y_log10() + geom_text(aes(label=continent, hjust=ifelse(year==1952, "right", -.1)), show.legend=F) + xlim(1945, 2020)
tmp %>% ggplot(aes(x=year, y=mean, color=continent)) + geom_point() + geom_line() + scale_y_log10() + geom_text(aes(label=continent, hjust=ifelse(year==1952, "right", "left")), show.legend=F) + xlim(1945, 2020)
?geom_text
tmp %>% ggplot(aes(x=year, y=mean, color=continent)) + geom_point() + geom_line() + scale_y_log10() + geom_text(aes(label=continent), hjust="outward", nudge_x=1, show.legend=F) + xlim(1945, 2020)
tmp %>% ggplot(aes(x=year, y=mean, color=continent)) + geom_point() + geom_line() + scale_y_log10() + geom_text(aes(label=continent), hjust="outward", nudge_x=-1, show.legend=F) + xlim(1945, 2020)
tmp %>% ggplot(aes(x=year, y=mean, color=continent)) + geom_point() + geom_line() + scale_y_log10() + geom_text(aes(label=continent), hjust="outward", nud, w.legend=F) + xlim(1945, 2020)
tmp %>% ggplot(aes(x=year, y=mean, color=continent)) + geom_point() + geom_line() + scale_y_log10() + geom_text(aes(label=continent), hjust="outward", w.legend=F) + xlim(1945, 2020)
tmp %>% ggplot(aes(x=year, y=mean, color=continent)) + geom_point() + geom_line() + scale_y_log10() + geom_text(aes(label=continent), hjust="outward", show.legend=F) + xlim(1945, 2020)
tmp %>% ggplot(aes(x=year, y=mean, color=continent)) + geom_point() + geom_line() + scale_y_log10() + geom_label(aes(label=continent), hjust="outward", show.legend=F) + xlim(1945, 2020)
?geom_label
tmp <- gapminder %>% filter(year %in% c(1952, 2007)) %>% filter(continent=="Europe")
tmp
tmp %>% ggplot(aes(x=pop, y=country, color=year)) + geom_point() + geom_line()
tmp <- gapminder %>% filter(year %in% c(1952, 2007)) %>% filter(continent=="Europe") %>% arrange(year, pop)
tmp %>% ggplot(aes(x=pop, y=country, color=year)) + geom_point() + geom_line()
tmp <- gapminder %>% filter(year %in% c(1952, 2007)) %>% filter(continent=="Europe") %>% arrange(pop)
tmp %>% ggplot(aes(x=pop, y=country, color=year)) + geom_point() + geom_line()
tmp <- gapminder %>% filter(year %in% c(1952, 2007)) %>% filter(continent=="Europe") %>% arrange(pop) %>% mutate(country=factor(country))
tmp %>% ggplot(aes(x=pop, y=country, color=year)) + geom_point() + geom_line()
tmp <- gapminder %>% filter(year %in% c(1952, 2007)) %>% filter(continent=="Europe") %>% arrange(pop, year) %>% mutate(country=factor(country))
tmp
tmp <- gapminder %>% filter(year %in% c(1952, 2007)) %>% filter(continent=="Europe") %>% arrange(pop, year) %>% mutate(country=factor(country, levels=country))
tmp <- gapminder %>% filter(year %in% c(1952, 2007)) %>% filter(continent=="Europe") %>% arrange(pop, year) %>% mutate(country=factor(country, levels=unique(country)))
tmp %>% ggplot(aes(x=pop, y=country, color=year)) + geom_point() + geom_line()
tmp <- gapminder %>% filter(year %in% c(1952, 2007)) %>% filter(continent=="Europe") %>% arrange(gdpPercapita, year) %>% mutate(country=factor(country, levels=unique(country)))
tmp
tmp <- gapminder %>% filter(year %in% c(1952, 2007)) %>% filter(continent=="Europe") %>% arrange(gdpPercap, year) %>% mutate(country=factor(country, levels=unique(country)))
tmp %>% ggplot(aes(x=pop, y=country, color=year)) + geom_point() + geom_line()
tmp %>% ggplot(aes(x=gpdPercap, y=country, color=year)) + geom_point() + geom_line()
tmp %>% ggplot(aes(x=gdpPercap, y=country, color=year)) + geom_point() + geom_line()
tmp <- gapminder %>% filter(year %in% c(1952, 2007)) %>% filter(continent=="Europe") %>% arrange(gdpPercap, year) %>% mutate(country=factor(country, levels=unique(country)), year=factor(year))
tmp %>% ggplot(aes(x=gdpPercap, y=country, color=year)) + geom_point() + geom_line()
tmp <- gapminder %>% filter(year %in% c(1952, 2007)) %>% filter(continent=="Europe") %>% arrange(gdpPercap, year) %>% mutate(country=factor(country, levels=unique(country)))
tmp %>% ggplot(aes(x=gdpPercap, y=country, color=year)) + geom_point() + geom_line()
xclip(2)
library(myfuncs)
xclip(2)
xclip(5)
xclip(15)
mtcars
mtcars$cty
mpg
mpg$cty
data(mpg)
ggplot(mpg, aes(cty, fill=factor(cyl))) +
  geom_density(alpha=0.8) +
    labs(title="Density plot",
         subtitle="City Mileage Grouped by Number of cylinders",
         caption="Source: mpg",
         x="City Mileage",
         fill="# Cylinders")
mpg %>% ggplot(aes(x=class, y=hwy)) + geom_boxplot()
mpg %>% ggplot(aes(x=class, y=hwy)) + geom_boxplot() +
  geom_dotplot()
mpg %>% ggplot(aes(x=class, y=hwy)) + geom_boxplot() + geom_dotplot()
mpg %>% ggplot(aes(x=class, y=hwy)) + geom_boxplot() + geom_dotplot(binaxis="y")
mpg %>% ggplot(aes(x=class, y=hwy)) + geom_boxplot() + geom_dotplot(binaxis="y", stackdir="center")
mpg %>% ggplot(aes(x=class, y=hwy)) + geom_boxplot() + geom_dotplot(binaxis="y", stackdir="center", fill="grey")
mpg %>% ggplot(aes(x=class, y=hwy)) + geom_boxplot() + geom_dotplot(binaxis="y", stackdir="center", fill="grey", dotsize=.3)
install.packages("qplot")
qplot
library(qplot)
mpg
qplot(cty, hwy, data=mpg)
?mpg
mpg
library(rgl)
rglwidget()
options(rgl.printRglwidget=TRUE)
rglwidget()
library(pca3d)
?pca3d
       data( metabo )
       pca <- prcomp( metabo[,-1], scale.= TRUE )
     
       pca3d( pca, group= metabo[,1] )
mpg
mtcars
boxplot(mpg ~ cyl, data=mtcars)
ggplot(mtcars, aes(x=factor(cyl), y=mpg)) + geom_boxplot()
tv <- read_csv("../Datasets/transcriptomics_results.csv")
tv
xclip(2)
plot(tv$logFC.F.D1, tv$logFC.F.D2)
ggplot(tv, aes(x=logFC.F.D1, y=logFC.F.D2)) +
  geom_point(color="#33333333") +
  xlab("Log2 FC on day 1") + ylab("Log2FC on day 2")
ggplot(tv, aes(x=logFC.F.D1, y=logFC.F.D2)) +
  geom_point(color="#33333333") +
  xlab("Log2 FC on day 1") + ylab("Log2FC on day 2") +
  geom_abline(intercept=0, slope=1)
ggplot(tv, aes(x=logFC.F.D1, y=logFC.F.D2)) +
  geom_point(color="#33333333") +
  xlab("Log2 FC on day 1") + ylab("Log2FC on day 2") +
  geom_abline(intercept=0, slope=1, color="grey")
tv <- tv %>% mutate(sign=abs(logFC.F.D1) > 1 & qval.F.D1 < .05) %>%
  arrange(sign)
tv$sign
tail(tv$sign)
ggplot(tv, aes(x=logFC.F.D1, y=qval.F.D1, color=sign)) +
  geom_point() + scale_y_reverse() + scale_y_log10()
ggplot(tv, aes(x=logFC.F.D1, y=qval.F.D1, color=sign)) + geom_point() + scale_y_reverse() + scale_y_log10()
ggplot(tv, aes(x=logFC.F.D1, y=qval.F.D1, color=sign)) + geom_point() + scale_y_log10() + scale_y_reverse()
ggplot(tv, aes(x=logFC.F.D1, y=-log10(qval.F.D1), color=sign)) + geom_point() 
ggplot(tv, aes(x=logFC.F.D1, y=-log10(qval.F.D1), color=sign)) + geom_point() + scale_color_manual(values=c("grey", "red"))
ggplot(tv, aes(x=logFC.F.D1, y=-log10(qval.F.D1), color=sign)) + geom_point() + scale_color_manual(values=c("grey", muted("red")))
?muted
ggplot(tv, aes(x=logFC.F.D1, y=-log10(qval.F.D1), color=sign)) + geom_point() + scale_color_manual(values=c("grey", muted("red")))
library(scales)
ggplot(tv, aes(x=logFC.F.D1, y=-log10(qval.F.D1), color=sign)) + geom_point() + scale_color_manual(values=c("grey", muted("red")))
ggplot(tv, aes(x=logFC.F.D1, y=-log10(qval.F.D1), color=sign)) + geom_point() +
  scale_color_manual(values=c("grey", scales::muted("red")))
ggplot(tv, aes(x=logFC.F.D1, y=-log10(qval.F.D1), color=logFC.F.D1)) + geom_point() + scale_color_gradient2(low="blue", mid="grey", high="red")
ggplot(tv, aes(x=logFC.F.D1, y=-log10(qval.F.D1), color=logFC.F.D1)) + 
  geom_point(alpha=.4) +
  scale_color_gradient2(low="blue", mid="#CCCCCC", high="red")
ggplot(tv, aes(x=logFC.F.D1, y=-log10(qval.F.D1), color=logFC.F.D1)) + 
  geom_point(alpha=.8) +
  scale_color_gradient2(low="blue", mid="#CCCCCC", high="red")
ggplot(tv, aes(x=logFC.F.D1, y=-log10(qval.F.D1), color=logFC.F.D1)) + 
  geom_point(alpha=.8) +
  scale_color_gradient2(low="blue", mid="#CCCCCC", high="red", name="Log2 Fold Change, Day 1")
tv <- tv %>%
  mutate(disco=logFC.F.D1 * logFC.F.D2 * (-log10(qval.F.D1) -log10(qval.F.D2)))
tv$disco
ggplot(tv, aes(x=logFC.F.D1, y=logFC.F.D2, color=disco)) +
  geom_point() +
  scale_color_gradient2(low="blue", mid="#CCCCCC", high="red", name="DISCO score") +
  xlab("Log2 FC on day 1") + ylab("Log2FC on day 2") +
  geom_abline(intercept=0, slope=1, color="grey")
tv <- tv %>% mutate(disco_trim=ifelse(abs(disco) > 10, 10 * sign(disco), disco))
ggplot(tv, aes(x=logFC.F.D1, y=logFC.F.D2, color=disco_trim)) +
  geom_point() +
  scale_color_gradient2(low="blue", mid="#CCCCCC", high="red", name="DISCO score") +
  xlab("Log2 FC on day 1") + ylab("Log2FC on day 2") +
  geom_abline(intercept=0, slope=1, color="grey")
tv <- tv %>% mutate(disco_trim=ifelse(abs(disco) > 10, 10 * sign(disco), disco))
ggplot(tv, aes(x=logFC.F.D1, y=logFC.F.D2, color=disco_trim)) +
  geom_point(alpha=.5) +
  scale_color_gradient2(low="blue", mid="#CCCCCC", high="red", name="DISCO score") +
  xlab("Log2 FC on day 1") + ylab("Log2FC on day 2") +
  geom_abline(intercept=0, slope=1, color="grey")
gsub("(.)_([0-9])", "\\2 , 1234_58")
?regex
library(glue)
myvar <- "testing"
library(glue)
print(glue("This is {myvar}, this is {myvar}!"))
dmy(c("1st of January, 2020", "1 Jan 1919", "23-9-2021"))
library(lubridate)
dmy(c("1st of January, 2020", "1 Jan 1919", "23-9-2021"))
mdy_hm("January, 27th 2017, 1:12PM")
install.packages("see")
library(see)
ggplot(iris, aes(x = Species, y = Sepal.Length, fill = Species)) +
  geom_violindot(fill_dots = "black") +
  theme_modern() +
  scale_fill_material_d()
p1 <- ggplot(iris, aes(x = Species, y = Sepal.Length, fill = Species)) +
  geom_violindot(fill_dots = "black") +
  theme_blackboard() +
  scale_fill_material_d()  
p3 <- ggplot(iris, aes(x = Petal.Length, y = Petal.Width, color = Sepal.Length)) +
  geom_point2() +
  theme_modern() +
  scale_color_material_c(palette = "rainbow")
plot(p1, p3)
plot(p1, p3, n_columns=2)
p1
p3
plots(p1, p3, n_columns=2)
p1 <- ggplot(iris, aes(x = Species, y = Sepal.Length, fill = Species)) +
  geom_violindot(fill_dots = "silver") +
  theme_blackboard() +
  scale_fill_material_d()  
p3 <- ggplot(iris, aes(x = Petal.Length, y = Petal.Width, color = Sepal.Length)) +
  geom_point2() +
  theme_modern() +
  scale_color_material_c(palette = "rainbow")
plots(p1, p3)
library(see)
p1 <- ggplot(iris, aes(x = Species, y = Sepal.Length, fill = Species)) +
  geom_violindot(fill_dots = "lightgrey") +
  theme_blackboard() +
  scale_fill_material_d()  
p3 <- ggplot(iris, aes(x = Petal.Length, y = Petal.Width, color = Sepal.Length)) +
  geom_point2() +
  theme_modern() +
  scale_color_material_c(palette = "rainbow")
plots(p1, p3)
  geom_violindot(fill_dots = "lightgrey") +
  theme_blackboard() +
  scale_fill_material_d()  
p3 <- ggplot(iris, aes(x = Petal.Length, y = Petal.Width, color = Sepal.Length)) +
  geom_point2() +
  theme_modern() +
  scale_color_material_c(palette = "rainbow")
plots(p1, p3, n_columns=2)
install.packages("hrbrthemes")
library(hrbrthemes)
ggplot(mtcars, aes(mpg, wt)) +
  geom_point(aes(color=factor(carb))) +
  labs(x="Fuel efficiency (mpg)", y="Weight (tons)",
       title="Seminal ggplot2 scatterplot example",
       subtitle="A plot that is only useful for demonstration purposes",
       caption="Brought to you by the letter 'g'") + 
  scale_color_ipsum() +
  theme_ipsum_rc()
install.packages("sjPlot")
library(sjPlot)
library(sjmisc)
library(sjlabelled)
# sample data
data("efc")
efc <- as_factor(efc, c161sex, c172code)
efc
library(sjPlot)
data(mtcars)
m.mtcars <- lm(mpg ~ cyl + hp + wt, data = mtcars)
tab_model(m.mtcars)
install.packages("ggbeeswarm")
library(anothertest)
hello())´
hello()
hello()
?hello
unloadNamespace("anothertest")
library(anothertest)
hello()
hello("hello")
?hello
?t.test
unloadNamespace("anothertest")
library(anothertest)
data(foobar)
foobar
BiocManager::install("GViz")
BiocManager::install("Gviz")
library(devtools)
install_github("january3/gglmtools")
library(gglmtools)
ggplot_lm(mod)
mtcars
mod <- lm(mpg ~ wt, data=mtcars)
ggplot_lm(mod)
mpg
?boxplot
?boxplot
showgene
library(beeswarm)
beeswarm(mpg$cty ~ mpg$cyl)
boxplot(mpg$cty ~ mpg$cyl, add=T, col=NA)
ggplot(mpg, aes(x=cyl, y=cty)) + geom_boxplot()
ggplot(mpg, aes(x=factor(cyl), y=cty)) + geom_boxplot()
ggplot(mpg, aes(x=factor(cyl), y=cty)) + geom_boxplot() + geom_jitter()
??ggbeeswarm
library(ggbeeswarm)
?ggbeeswarm
ggplot(mpg, aes(x=factor(cyl), y=cty)) + geom_boxplot() + geom_quasirandom()
ggbbplot <- function(x, f) {
  require(ggbeeswarm)
  df <- data.frame(y=x, x=factor(f))
  ggplot(df, aes(x=x, y=y)) + gg_boxplot() + geom_quasirandom()
} 
ggbbplot(mpg$cty, mpg$cyl)
ggbbplot <- function(x, f) {
  require(ggbeeswarm)
  df <- data.frame(y=x, x=factor(f))
  ggplot(df, aes(x=x, y=y)) + geom_boxplot() + geom_quasirandom()
} 
ggbbplot(mpg$cty, mpg$cyl)
print.data.frame <- function(x, n=10, ...) {
  N <- nrow(x)
  if(N > n) {
    x <- x[1:n, ]
  }
  base::print.data.frame(x, ...)
}
mpg
as.data.frame(mpg)
print(as.data.frame(mpg), n=13)
table(mpg$manufacturer)
as.numeric(table(mpg$manufacturer))
names(table(mpg$manufacturer))
values(table(mpg$manufacturer))
?map
x <- mpg$manufacturer
x
  require(purrr)
  tab <- table(x)
  vec <- as.numeric(tab)
  names(vec) <- names(tab)
  vec <- sort(vec, decreasing=TRUE)
  res <- map2_chr(vec, names(vec), ~ {
    paste0(.y, ": ", .x)
  })
res
vec
summary.character <- function(x, ...) {
  
  require(purrr)
  tab <- table(x)
  vec <- as.numeric(tab)
  names(vec) <- names(tab)
  vec <- sort(vec, decreasing=TRUE)
  res <- map2_chr(vec, names(vec), ~ {
    paste0(.y, ": ", .x)
  })
  res <- paste(res, collapse="\n")
  cat(res)
}
summary( mpg$manufacturer)
